{"version":3,"sources":["useGrid.js","App.js","index.js"],"names":["generateGrid","size","grid","x","row","y","push","Math","floor","random","i","App","useState","setGrid","refresh","useGrid","skull","className","icon","faSkull","apple","faAppleAlt","map","cell","onClick","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAQA,SAASA,EAAaC,GAMpB,IALA,IAAMC,EAAO,GAKJC,EAAI,EAAGA,EAAIF,EAAME,IAAK,CAE7B,IADA,IAAMC,EAAM,GACHC,EAAI,EAAGA,EAAIJ,EAAMI,IACxBD,EAAIE,KAAKC,KAAKC,MAPL,EAOWD,KAAKE,UAAmB,GAE9CP,EAAKI,KAAKF,GAGZ,IAAK,IAAIM,EAAI,EAAGA,EAXE,EAWaA,IAAK,CAClC,IAAMP,EAAII,KAAKC,MAAMD,KAAKE,SAAWR,GAC/BI,EAAIE,KAAKC,MAAMD,KAAKE,SAAWR,GACrCC,EAAKC,GAAGE,GAAK,EAEf,IAAK,IAAIK,EAAI,EAAGA,EAfE,EAeaA,IAAK,CAClC,IAAMP,EAAII,KAAKC,MAAMD,KAAKE,UAAYR,EAAO,GAAK,GAC5CI,EAAIE,KAAKC,MAAMD,KAAKE,UAAYR,EAAO,GAAK,GAClDC,EAAKC,GAAGE,IAAM,EAGhB,OAAOH,E,yBCCMS,MA7Bf,WACE,IAAMT,EDJO,SAAiBD,GAC9B,MAAwBW,mBAASZ,EAAaC,IAA9C,mBAAOC,EAAP,KAAaW,EAAb,KAEA,OADAX,EAAKY,QAAU,kBAAMD,EAAQb,EAAaC,KACnCC,ECCMa,CAAQ,IACfC,EAAQ,cAAC,IAAD,CAAiBC,UAAU,QAAQC,KAAMC,MACjDC,EAAQ,cAAC,IAAD,CAAiBH,UAAU,QAAQC,KAAMG,MAEvD,OACE,sBAAKJ,UAAU,MAAf,UACE,+CACA,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,OAAf,SACGf,EAAKoB,KAAI,SAAAlB,GAAG,OACX,qBAAKa,UAAU,MAAf,SACGb,EAAIkB,KAAI,SAAAC,GAAI,OACX,qBAAKN,UAAU,OAAf,UACY,IAAVM,EAAcP,EAAiB,IAATO,EAAaH,EAAQG,GADlBhB,KAAKE,cAFVF,KAAKE,iBASrC,wBAAQe,QAAS,kBAAMtB,EAAKY,WAA5B,qBACA,uBACA,8BACE,6BAAI,mBAAGW,KAAK,qEAAR,2BCvBZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.33088ebe.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport default function useGrid(size) {\n  const [grid, setGrid] = useState(generateGrid(size));\n  grid.refresh = () => setGrid(generateGrid(size));\n  return grid;\n}\n\nfunction generateGrid(size) {\n  const grid = [];\n  const dice = 6;\n  const numApples = 5;\n  const numSkulls = 6;\n\n  for (let x = 0; x < size; x++) {\n    const row = [];\n    for (let y = 0; y < size; y++) {\n      row.push(Math.floor(Math.random() * dice) + 1);\n    }\n    grid.push(row);\n  }\n\n  for (let i = 0; i < numApples; i++) {\n    const x = Math.floor(Math.random() * size);\n    const y = Math.floor(Math.random() * size);\n    grid[x][y] = 0;\n  }\n  for (let i = 0; i < numSkulls; i++) {\n    const x = Math.floor(Math.random() * (size - 2) + 1);\n    const y = Math.floor(Math.random() * (size - 2) + 1);\n    grid[x][y] = -1;\n  }\n\n  return grid;\n}\n","import './App.css';\nimport useGrid from './useGrid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSkull, faAppleAlt } from '@fortawesome/free-solid-svg-icons';\n\nfunction App() {\n  const grid = useGrid(11);\n  const skull = <FontAwesomeIcon className=\"nudge\" icon={faSkull} />;\n  const apple = <FontAwesomeIcon className=\"nudge\" icon={faAppleAlt} />;\n\n  return (\n    <div className=\"App\">\n      <h1>Serpens Malum</h1>\n      <div className=\"container\">\n        <div className=\"grid\">\n          {grid.map(row =>\n            <div className=\"row\" key={Math.random()}>\n              {row.map(cell =>\n                <div className=\"cell\" key={Math.random()}>{\n                  cell === -1 ? skull : cell === 0 ? apple : cell\n                }</div>\n              )}\n            </div>)}\n        </div>\n      </div>\n      <button onClick={() => grid.refresh()}>Refresh</button>\n      <hr />\n      <div>\n        <h2><a href=\"https://github.com/marcmajcher/serpens-malum/blob/master/README.md\">Rules</a></h2>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}